/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.baitando.openapi.samples.gen.springbootserver.api;

import com.baitando.openapi.samples.gen.springbootserver.model.ErrorDto;
import com.baitando.openapi.samples.gen.springbootserver.model.TranslationRequestDto;
import com.baitando.openapi.samples.gen.springbootserver.model.TranslationResponseDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-12-12T13:02:27.537224+09:00[Asia/Tokyo]")
@Validated
@Api(value = "api", description = "the api API")
public interface ApiApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/translate : post translation
     *
     * @param translationRequestDto  (required)
     * @return translation (status code 200)
     *         or unexpected error (status code 200)
     */
    @ApiOperation(value = "post translation", nickname = "postTranslation", notes = "", response = TranslationResponseDto.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "translation", response = TranslationResponseDto.class),
        @ApiResponse(code = 200, message = "unexpected error", response = ErrorDto.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/translate",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<TranslationResponseDto> _postTranslation(@ApiParam(value = "", required = true) @Valid @RequestBody TranslationRequestDto translationRequestDto) {
        return postTranslation(translationRequestDto);
    }

    // Override this method
    default  ResponseEntity<TranslationResponseDto> postTranslation(TranslationRequestDto translationRequestDto) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"translatedText\" : \"はろーわーるど\", \"detectedLanguage\" : \"英語\", \"translatedLanguage\" : \"日本語\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
